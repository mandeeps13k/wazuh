/*
 * Wazuh Vulnerability scanner
 * Copyright (C) 2015, Wazuh Inc.
 * March 25, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "vulnerabilityScanner.hpp"
#include "cjsonSmartDeleter.hpp"
#include "loggerHelper.h"
#include "vulnerabilityScannerFacade.hpp"
#include "vulnerability_scanner.h"
#include "wmodules_def.h"
#include <functional>
#include <string>

// TODO: Remove LCOV flags once the implementation of the 'Indexer Connector' module is completed
// LCOV_EXCL_START
void VulnerabilityScanner::start(const nlohmann::json& configuration)
{
    VulnerabilityScannerFacade::instance().start(configuration);
}

void VulnerabilityScanner::stop()
{
    VulnerabilityScannerFacade::instance().stop();
}

#ifdef __cplusplus
extern "C"
{
#endif
    void vulnerability_scanner_start(log_functions_t logFuncs, const cJSON* configuration)
    {
        nlohmann::json configurationNlohmann;
        if (configuration)
        {
            const std::unique_ptr<char, CJsonSmartFree> spJsonBytes {cJSON_Print(configuration)};
            configurationNlohmann = nlohmann::json::parse(spJsonBytes.get());
        }

        Log::assignLogFunction(NULL);

        //logInfo(WM_VULNSCAN_LOGTAG, "VULDET TEST");

        VulnerabilityScanner::instance().start(configurationNlohmann);
    }

    void vulnerability_scanner_stop()
    {
        VulnerabilityScanner::instance().stop();
    }

    bool vulnerability_scanner_policy_change_event(const char* data)
    {
        return true;
    }
#ifdef __cplusplus
}
#endif
// LCOV_EXCL_STOP
